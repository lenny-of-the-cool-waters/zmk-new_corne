#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&ctrl_alt_del>;

            label = "esc|ctrl_alt_del";
        };

        td_1: td_1 {
            compatible = "zmk,behavior-hold-tap";
            label = "tab | left_alt";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <13>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        ctrl_alt_del: ctrl_alt_del {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp DEL>;
            label = "CTRL_ALT_DEL";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&mt LA(LC(DELETE)) ESCAPE  &kp Q  &kp W  &kp E     &kp R       &kp T                                               &mmv MOVE_UP                     &kp Y                  &kp U      &kp I              &kp O    &kp P     &kp BSPC
&mt LEFT_ALT TAB           &kp A  &kp S  &kp D     &kp F       &kp G                               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp H                  &kp J      &kp K              &kp L    &kp SEMI  &mt RIGHT_ALT SQT
&kp LCTRL                  &kp Z  &kp X  &kp C     &kp V       &kp B                 &kp C_MUTE                    &mmv MOVE_DOWN                   &kp N                  &kp M      &kp COMMA          &kp DOT  &kp FSLH  &kp DELETE
                                         &kp LGUI  &lt 1 HOME  &mt LEFT_SHIFT ENTER                                                                 &mt RIGHT_SHIFT SPACE  &lt 2 END  &mt RALT CAPSLOCK
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp GRAVE         &kp N1         &kp N2        &kp N3        &kp N4        &kp N5                                              &msc SCRL_UP                     &kp N6                 &kp N7          &kp N8    &kp N9     &kp N0                &kp BSPC
&kp PRINTSCREEN   &kp LA(F4)     &none         &none         &kp MINUS     &kp LEFT_PARENTHESIS                &msc SCRL_LEFT  &mkp RCLK       &msc SCRL_RIGHT  &kp RIGHT_PARENTHESIS  &kp EQUAL       &kp UP    &none      &none                 &kp PG_UP
&kp LS(LEFT_ALT)  &kp LC(LS(Y))  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &kp LEFT_BRACKET      &kp C_MUTE                    &msc SCRL_DOWN                   &kp RIGHT_BRACKET      &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &kp NON_US_BACKSLASH  &kp PG_DN
                                               &trans        &trans        &trans                                                                               &trans                 &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        raise_layer {
            display-name = "NUMPAD";
            bindings = <
&trans  &kp EXCL      &kp F1  &kp F2   &kp F3            &kp F4                                      &mmv MOVE_UP                     &kp N0      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS   &kp BSPC
&trans  &bt BT_CLR    &kp F5  &kp F6   &kp F7            &kp F8                      &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp COMMA   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &kp LEFT_ALT
&trans  &out OUT_USB  &kp F9  &kp F10  &kp F11           &kp F12  &rgb_ug RGB_TOG                    &mmv MOVE_DOWN                   &kp PERIOD  &kp N7        &kp N8        &kp N9        &kp EQUAL  &kp DEL
                              &trans   &lt 3 LEFT_SHIFT  &trans                                                                       &trans      &trans        &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };

        layer_3 {
            display-name = "RGB";
            bindings = <
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &none   &none   &none                            &mmv MOVE_UP                     &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 3  &bt BT_SEL 3  &bt BT_SEL 4
&rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &none   &none   &none            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none       &none         &none         &none         &none         &none
&rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &none   &none   &none   &none                    &mmv MOVE_DOWN                   &none       &none         &none         &none         &none         &none
                                                   &trans  &trans  &trans                                                            &trans      &trans        &trans
            >;
        };
    };
};
